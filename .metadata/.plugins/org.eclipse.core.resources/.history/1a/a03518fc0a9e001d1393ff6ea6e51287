package com.marroticket.common.email.service;

import java.util.HashMap;

import javax.mail.internet.MimeMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import org.thymeleaf.context.Context;
import org.thymeleaf.spring5.SpringTemplateEngine;

import com.marroticket.common.email.vo.EmailVO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor 
public class EmailServiceImpl implements EmailService{

    @Autowired
    private JavaMailSender emailSender;

    @Autowired
    private SpringTemplateEngine templateEngine;

	/*
	 * @Override public void sendSimpleMessage(EmailVO email) throws Exception {
	 * SimpleMailMessage message = new SimpleMailMessage();
	 * message.setFrom("xpsxm617@gmail.com"); message.setTo(email.getAddress());
	 * message.setSubject(email.getTitle()); message.setText(email.getContent());
	 * emailSender.send(message); }
	 */
    @Override
    public void sendSimpleMessage(EmailVO email) throws Exception {
    	MimeMessage message = emailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
        //메일 제목 설정
        helper.setSubject(email.getTitle());

        //수신자 설정
        helper.setTo(email.getAddress());
        
        //참조자 설정
        //발신자 설정
        helper.setFrom("xpsxm617@naver.com");

        //템플릿에 전달할 데이터 설정
        HashMap<String, String> emailValues = new HashMap<>();
    	emailValues.put("password", email.getPassword());
    	
        Context context = new Context();
        emailValues.forEach((key, value)->{
            context.setVariable(key, value);
        });
    	              
        //메일 내용 설정 : 템플릿 프로세스
        String html = templateEngine.process("index", context);
        helper.setText(html, true);

        //메일 보내기
        emailSender.send(message);
    }
}
