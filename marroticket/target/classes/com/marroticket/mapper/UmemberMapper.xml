<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.marroticket.mapper.UmemberMapper">	
	<!-- UmemberVO resultmap 정의 -->
	<resultMap type="com.marroticket.umember.member.domain.UmemberVO" id="umemberMap">
		<id property="uNumber" column="u_number" />
		<result property="uId" column="u_id" />
		<result property="uPassword" column="u_password" />
		<result property="uName" column="u_name" />
		<result property="uPhoneNumber" column="u_phoneNumber" />
		<result property="uBirthday" column="u_birthday" />
		<result property="uGender" column="u_gender" />
		<result property="uEmail" column="u_email" />
		<result property="uJoinDate" column="u_joinDate" />
		<result property="uUnjoin" column="u_unjoin" />
		<result property="uUnjoinDate" column="u_unjoinDate" />
		<result property="uGenre" column="u_genre" />
		<result property="uAgree" column="u_agree" />
		<collection property="umemberAuthList" resultMap="authMap" />
	</resultMap>
	<!-- UmemberAuth resultmap 정의 -->
	<resultMap type="com.marroticket.umember.member.domain.UmemberAuth" id="authMap">
		<result property="uNumber" column="u_number" />
		<result property="umemberAuth" column="umember_auth" />
	</resultMap>
	
	<!--일반회원 아이디 찾기 -->

	<select id="findId" resultType="String">
		SELECT u_id
		FROM umember
		WHERE
		u_name = #{uName} and u_phoneNumber = #{uPhoneNumber}
	</select>
	
	<!--일반회원 비밀번호 업데이트 -->
	<update id="updatePassword"
		parameterType="com.marroticket.umember.member.domain.UmemberVO">
		UPDATE umember SET u_password = #{uPassword}
		WHERE u_id =
		#{uId} and u_email = #{uEmail}
	</update>
	
	<!-- 아이디 읽어오기(로그인) -->
	<select id="read" resultMap="umemberMap">
		SELECT mem.u_number,
		mem.u_id,
		u_password,
		u_name,
		u_phoneNumber,
		u_birthday,
		u_gender,
		u_email,
		u_joinDate,
		u_unjoin,
		u_unjoinDate,
		u_genre,
		u_agree,
		umember_auth
		FROM umember mem LEFT OUTER JOIN umember_auth auth ON
		mem.u_number = auth.u_number
		WHERE mem.u_id = #{uId}
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="uIdCheck" resultType="int">
		SELECT count(*)
		FROM umember
		WHERE u_id = #{uId}
	</select>
	
	<!-- 회원가입 -->
	<insert id="create"
		parameterType="com.marroticket.umember.member.domain.UmemberVO">
		INSERT INTO UMEMBER (
		u_number,
		u_id,
		u_password,
		u_name,
		u_phoneNumber,
		u_birthday,
		u_gender,
		u_email,
		u_genre,
		u_agree
		)
		VALUES (
		umember_seq.nextval,
		#{uId},
		#{uPassword},
		#{uName},
		#{uPhoneNumber},
		#{uBirthday},
		#{uGender},
		#{uEmail},
		#{uGenre},
		#{uAgree}
		
		)
	</insert>

	<!-- 회원가입 시 권한 부여 -->
	<insert id="createAuth">
		INSERT INTO umember_auth
		(
			u_number,
			umember_auth
		)
		VALUES
		(
			umember_seq.CURRVAL,
			#{umemberAuth}
		)
	</insert>	
	
	<!-- 마이페이지 회원정보 -->
	<select id="getUmemberByUId"  resultMap="umemberMap">
	SELECT *
	FROM umember 
	WHERE u_id = #{uId}
	</select>
	<!-- 마이페이지 회원수정 -->
	<update id="updateInfo" >
		update UMEMBER 
		set u_password=#{uPassword},
		u_phoneNumber=#{uPhoneNumber},
		u_email=#{uEmail},
		u_genre=#{uGenre}
		where u_id=#{uId}
	</update>
	<!-- 회원 탈퇴 -->
	<delete id="deleteAuth" parameterType="int">
	  DELETE FROM UMEMBER_AUTH 
	  WHERE u_number  = #{uNumber}
	</delete>
	<delete id="deleteMember">
	DELETE  FROM UMEMBER 
	WHERE u_id = #{uId}
	</delete>
	
</mapper>